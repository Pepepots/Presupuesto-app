{"version":3,"sources":["helpers/cambioColor.js","components/ControlPresupuesto.js","hooks/useForm.js","components/Error.js","components/Formulario.js","components/Gasto.js","components/PreguntaPresupuesto.js","PresupuestoApp.js","index.js"],"names":["cambioColor","presupuesto","restante","ControlPresupuesto","className","useForm","initialState","useState","values","setValues","reset","handleInputChange","target","name","value","Error","error","Formulario","crearGasto","nombre","cantidad","gasto","errores","setError","counter","setCounter","length","onSubmit","e","preventDefault","isNaN","id","type","placeholder","onChange","Gasto","handleDelete","onClick","PreguntaPresupuesto","setPresupuesto","setRestante","presupuestoForm","form","parseInt","PresupuestoApp","gastos","setGastos","nuevosGastos","filter","cita","presupuestoRestante","map","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0a7b0ab7.chunk.js","sourcesContent":["\r\nexport const cambioColor = ( presupuesto, restante ) => {\r\n    \r\n    let clase;\r\n\r\n    if ( (presupuesto / 4) > restante ) {\r\n        clase = 'alert alert-danger';\r\n    } else if ( (presupuesto / 2 ) > restante ) {\r\n        clase = 'alert alert-warning'\r\n    } else {\r\n        clase = 'alert alert-success';\r\n    }\r\n\r\n    return clase;\r\n\r\n}\r\n","import React from 'react'\r\nimport { cambioColor } from '../helpers/cambioColor'\r\n\r\nexport const ControlPresupuesto = ({ presupuesto, restante }) => {\r\n    return (\r\n        <>\r\n            <div className=\"alert alert-primary\">\r\n                Presupuesto: $ {presupuesto}\r\n            </div>\r\n            <div className={cambioColor( presupuesto, restante )}>\r\n                Restante: $ {restante}\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import { useState } from 'react'\r\n\r\nexport const useForm = ( initialState = {}) => {\r\n    \r\n    const [values, setValues] = useState(initialState)\r\n\r\n    const reset = () => {\r\n\r\n        setValues(initialState)\r\n\r\n    }\r\n    \r\n    const handleInputChange = ({ target }) => {\r\n        \r\n        setValues({\r\n            ...values,\r\n            [target.name]: target.value\r\n        })\r\n\r\n    }\r\n\r\n    return [ values, handleInputChange, reset]\r\n\r\n}\r\n","import React from 'react'\r\n\r\nexport const Error = ({error}) => {\r\n\r\n    return (\r\n        <>\r\n            <p className=\"alert alert-danger error\">{ error }</p>\r\n        </>\r\n    )\r\n}\r\n","import { useState } from 'react';\r\nimport { useForm } from '../hooks/useForm'\r\nimport { Error } from './Error';\r\n\r\nexport const Formulario = ({ crearGasto }) => {\r\n\r\n    const [ gasto, handleInputChange, reset ] = useForm({\r\n        nombre:  '',\r\n        cantidad: ''\r\n    });\r\n    const [errores, setError] = useState([]);\r\n    const [counter, setCounter] = useState(0);\r\n\r\n    const { nombre, cantidad } = gasto;\r\n\r\n    const handleSubmit = (e) => {\r\n        \r\n        e.preventDefault();\r\n\r\n        // Validar\r\n            if ( nombre.length < 3 ){\r\n                setError([\r\n                    'El nombre es muy corto'\r\n                ]);\r\n                return;\r\n            }else if ( cantidad < 1 ) {\r\n                setError([\r\n                    'La cantidad es 0 o menor'\r\n                ]);\r\n                return;\r\n            }else if ( isNaN( cantidad ) ){\r\n                setError([\r\n                    'No has ingreado una cantidad'\r\n                ])\r\n                return;\r\n            };\r\n        \r\n        gasto.id = counter;\r\n\r\n        crearGasto( gasto )\r\n        setError([]);\r\n        setCounter( counter + 1 );\r\n        reset();\r\n        \r\n    }\r\n\r\n    return (\r\n\r\n        <> \r\n            <h2> Agrega tus gastos aqui </h2>\r\n            {\r\n                errores.length !== 0 \r\n                    ?<Error\r\n                        error={errores} \r\n                    />\r\n                    :null\r\n            }        \r\n            <form onSubmit = { handleSubmit }>\r\n                \r\n                <div className=\"campo\">\r\n                    <label> Nombre Gasto </label>\r\n                    <input \r\n                        type=\"text\"\r\n                        className=\"u-full-width\"\r\n                        placeholder=\"Ej. Transporte\"\r\n                        onChange={handleInputChange}\r\n                        name=\"nombre\"\r\n                        value={ nombre }\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"campo\">\r\n                    <label> Cantidad Gasto </label>\r\n                    <input \r\n                        type=\"number\"\r\n                        className=\"u-full-width\"\r\n                        placeholder=\"Ej. 300\"\r\n                        onChange={handleInputChange}\r\n                        name=\"cantidad\"\r\n                        value={ cantidad }\r\n                    />\r\n                </div>\r\n\r\n                <input \r\n                    type=\"submit\"\r\n                    className=\"button-primary u-full-width\"\r\n                    value=\"Agregar Gasto\"\r\n                />\r\n\r\n            </form>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport const Gasto = ({ gasto, handleDelete }) => {\r\n    \r\n    const { nombre, cantidad, id } = gasto;\r\n    // console.log(nombre,cantidad);\r\n    \r\n    return (\r\n        <li className=\"gastos\" onClick={() => handleDelete( cantidad, id)}>\r\n            <p> \r\n                { nombre } \r\n                <span className=\"gasto\"> $ {cantidad} </span>    \r\n            </p>\r\n        </li>\r\n    )\r\n}\r\n","import { useState } from 'react'\r\nimport { useForm } from '../hooks/useForm'\r\nimport { Error } from './Error';\r\n\r\nexport const PreguntaPresupuesto = ({ setPresupuesto, setRestante }) => {\r\n    \r\n    const [ form , handleInputChange, reset ] = useForm({\r\n        presupuestoForm: ''\r\n    });\r\n\r\n    const [errores, setError] = useState([])\r\n\r\n    const { presupuestoForm } = form;\r\n\r\n    const presupuesto = parseInt(presupuestoForm);\r\n\r\n    const handleSubmit = (e) => {\r\n\r\n        e.preventDefault()\r\n\r\n        // Validar\r\n        if ( presupuesto < 1 ) {\r\n            setError([\r\n                'El presupuesto es 0 o menor'\r\n            ]);\r\n            return;\r\n        }else if ( isNaN( presupuesto ) ){\r\n            setError([\r\n                'No has ingreado el presupuesto'\r\n            ])\r\n            return;\r\n        }\r\n\r\n        setError([]);\r\n        reset();\r\n        setPresupuesto(presupuesto);\r\n        setRestante(presupuesto);\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <h2> Coloca tu presupuesto </h2>\r\n\r\n            {\r\n                errores.length !== 0 \r\n                    ?<Error\r\n                        error={errores} \r\n                    />\r\n                    :null\r\n            }\r\n\r\n            <form onSubmit={ handleSubmit }>\r\n                <input \r\n                    type=\"number\" \r\n                    className=\"u-full-width\"\r\n                    placeholder=\"Coloca tu presupuesto\"\r\n                    name=\"presupuestoForm\"\r\n                    onChange={handleInputChange}\r\n                    value={presupuestoForm}\r\n                />\r\n\r\n                <input \r\n                    type=\"submit\" \r\n                    className=\"button-primary u-full-width\"\r\n                    value=\"Definir Presupuesto\"\r\n                />  \r\n            </form>    \r\n        </>\r\n    )\r\n}\r\n","import React, { useState } from 'react'\r\nimport { ControlPresupuesto } from './components/ControlPresupuesto';\r\nimport { Formulario } from './components/Formulario';\r\nimport { Gasto } from './components/Gasto';\r\nimport { PreguntaPresupuesto } from './components/PreguntaPresupuesto'\r\n\r\nexport const PresupuestoApp = () => {\r\n\r\n    const [presupuesto, setPresupuesto] = useState(0);\r\n    const [restante, setRestante] = useState(0);\r\n    const [gastos, setGastos] = useState([]);\r\n\r\n        \r\n    const crearGasto = (gasto) => {\r\n        setGastos([\r\n            ...gastos,\r\n            gasto\r\n        ]);\r\n        const presupuestoRestante = restante - gasto.cantidad;\r\n        setRestante(presupuestoRestante)\r\n    }\r\n\r\n    const handleDelete = ( cantidad, id ) => {\r\n\r\n        const nuevosGastos = gastos.filter( cita => cita.id !== id );\r\n        setGastos( nuevosGastos )\r\n\r\n        const presupuestoRestante = restante + parseInt( cantidad );\r\n        setRestante(presupuestoRestante)\r\n    }\r\n\r\n    return (\r\n        <div className=\"container titulo\">\r\n            <h1>Gasto Semanal</h1>\r\n\r\n            <div className=\"contenido-principal\">\r\n                {\r\n                    presupuesto === 0\r\n                        ?\r\n                        <PreguntaPresupuesto\r\n                            setPresupuesto={setPresupuesto}\r\n                            setRestante={setRestante}\r\n                        />\r\n                        :\r\n                        <div className=\"row\">\r\n                            <div className=\"one-half column\">\r\n                                <Formulario\r\n                                    crearGasto={crearGasto}\r\n                                />\r\n                            </div>\r\n\r\n                            <div className=\"one-half column\">\r\n                                {\r\n                                    gastos.length === 0\r\n                                    ? <h2> No hay gastos </h2>\r\n                                    : <h2> Administra tus gastos </h2>\r\n                                }\r\n                                <div className=\"gastos-realizados\">\r\n                                    {gastos.map(gasto => (\r\n                                        <Gasto\r\n                                            key={gasto.id}\r\n                                            gasto={gasto}\r\n                                            handleDelete={handleDelete}\r\n                                        />\r\n                                    ))}\r\n                                </div>\r\n\r\n                                <ControlPresupuesto \r\n                                    presupuesto={presupuesto}\r\n                                    restante={restante}\r\n                                />\r\n\r\n                            </div>\r\n                        </div>\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { PresupuestoApp } from './PresupuestoApp';\nimport './index.css';\n\nReactDOM.render(\n  <PresupuestoApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}